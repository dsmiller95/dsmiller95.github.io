{"version":3,"sources":["webpack:///./src/pages/posts/index.js","webpack:///./src/components/tag-list/tag-list.module.less","webpack:///./src/components/button/button.js","webpack:///./src/components/post-list/post-list.module.less","webpack:///./src/components/archive-pagination/archive-pagination.js","webpack:///./src/components/tag-list/tag-list.js","webpack:///./src/components/post-list/post-list.js","webpack:///./src/components/button/button.module.less","webpack:///./src/components/archive-pagination/archive-pagination.module.less"],"names":["query","IndexPage","data","title","description","Config","siteDescription","path","posts","allMdx","edges","nextPage","module","exports","Button","children","to","buttonStyle","className","style","button","defaultProps","ArchivePagination","prevPage","container","Utils","resolvePageUrl","pages","archive","buttonLeft","buttonRight","TagList","tags","filter","tag","index","indexOf","sort","map","tagPageUrl","tagData","console","error","key","name","capitalize","PostList","post","node","frontmatter","date","cover","excerpt","fluid","childImageSharp","alt","content"],"mappings":"6FAAA,2IA2BaA,EAAK,YA2BHC,UA3CG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,OAAOC,YAAaC,IAAOC,gBAAiBC,KAAK,UAC5D,kBAAC,IAAD,CAAUC,MAAON,EAAKO,OAAOC,QAC7B,kBAAC,IAAD,CAAmBC,SAAU,O,uBCdjCC,EAAOC,QAAU,CAAC,KAAO,iC,8HCMnBC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,YAAjB,OACb,kBAAC,OAAD,CAAMD,GAAIA,EAAIE,UAAcC,IAAMC,OAAX,IAAqBH,GACzCF,IAULD,EAAOO,aAAe,CACpBJ,YAAa,IAGAH,S,qBCtBfF,EAAOC,QAAU,CAAC,UAAY,qCAAqC,KAAO,gCAAgC,MAAQ,iCAAiC,QAAU,qC,oLCqC9IS,EA5BW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUZ,EAAb,EAAaA,SAAb,OACxB,yBAAKO,UAAWC,IAAMK,WACnBD,EACC,kBAAC,IAAD,CACEP,GAAIS,IAAMC,eAAerB,IAAOsB,MAAMC,QAASL,GAC/CN,YAAaE,IAAMU,YAEnB,kBAAC,IAAD,MACA,8CAEA,KACHlB,EACC,kBAAC,IAAD,CACEK,GAAIS,IAAMC,eAAerB,IAAOsB,MAAMC,QAASjB,GAC/CM,YAAaE,IAAMW,aAEnB,6CACA,kBAAC,IAAD,OAEA,Q,kLCKOC,EAzBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACd,yBAAKd,UAAWC,IAAMa,MACnBA,EACEC,QAAO,SAACC,EAAKC,GAAN,OAAgBA,IAAUH,EAAKI,QAAQF,MAC9CG,OACAC,KAAI,SAAAJ,GACH,IAAMK,EAAad,IAAMC,eAAerB,IAAOsB,MAAMO,IAAKA,GACpDM,EAAUnC,IAAO2B,KAAKE,GAK5B,OAJKM,GACHC,QAAQC,MAAR,gBAA8BR,EAA9B,cAIA,kBAAC,OAAD,CAAMlB,GAAIuB,EAAYI,IAAKT,IACxBM,aAAA,EAAAA,EAASI,OAAQnB,IAAMoB,WAAWX,U,oLCoChCY,EAjDE,SAAC,GAAD,IAAGtC,EAAH,EAAGA,MAAH,OACf,yBAAKU,UAAWC,IAAMK,WACnBhB,EAAM8B,KAAI,SAACS,EAAMZ,GAAW,IAAD,EAC0BY,EAAKC,KAAKC,YAAtD9C,EADkB,EAClBA,MAAO+C,EADW,EACXA,KAAM3C,EADK,EACLA,KAAMyB,EADD,EACCA,KAAMmB,EADP,EACOA,MAAOC,EADd,EACcA,QACxC,OACE,yBAAKT,IAAKxC,EAAOe,UAAWC,IAAM4B,MAChC,yBAAK7B,UAAWC,IAAMgC,OACpB,kBAAC,OAAD,CAAMnC,GAAIS,IAAMC,eAAenB,IAC7B,kBAAC,IAAD,CACE8C,MAAOF,EAAMG,gBAAgBD,MAC7BlD,MAAOiD,EACPG,IAAKpD,MAIX,yBAAKe,UAAWC,IAAMqC,SACpB,kBAAC,OAAD,CAAMxC,GAAIS,IAAMC,eAAenB,IAC5B2C,EAAO,+BAAQA,GAAgB,KAChC,4BAAK/C,GACL,2BAAIiD,IAEN,kBAAC,IAAD,CAASpB,KAAMA,Y,qBC9B3BpB,EAAOC,QAAU,CAAC,OAAS,iC,qBCA3BD,EAAOC,QAAU,CAAC,UAAY,8CAA8C,WAAa,+CAA+C,YAAc","file":"component---src-pages-posts-index-js-65102d4133d606e894a5.js","sourcesContent":["/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n/* App imports */\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport PostList from '../../components/post-list'\nimport ArchivePagination from '../../components/archive-pagination'\nimport Config from '../../../config'\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" description={Config.siteDescription} path=\"posts\" />\n    <PostList posts={data.allMdx.edges} />\n    <ArchivePagination nextPage={2} />\n  </Layout>\n)\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMdx: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    }).isRequired,\n  }).isRequired,\n}\n\nexport const query = graphql`\n  {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/index.mdx?$/\" } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            tags\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"tag-list-module--tags--O_Obx\"};","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n/* App imports */\nimport style from './button.module.less'\n\nconst Button = ({ children, to, buttonStyle }) => (\n  <Link to={to} className={`${style.button} ${buttonStyle}`}>\n    {children}\n  </Link>\n)\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  to: PropTypes.string.isRequired,\n  buttonStyle: PropTypes.string,\n}\n\nButton.defaultProps = {\n  buttonStyle: '',\n}\n\nexport default Button\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"post-list-module--container--2AqiX\",\"post\":\"post-list-module--post--1gkyY\",\"cover\":\"post-list-module--cover--31q1n\",\"content\":\"post-list-module--content--ixjr-\"};","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa'\n/* App imports */\nimport Button from '../../components/button'\nimport Config from '../../../config'\nimport Utils from '../../utils'\nimport style from './archive-pagination.module.less'\n\nconst ArchivePagination = ({ prevPage, nextPage }) => (\n  <div className={style.container}>\n    {prevPage ? (\n      <Button\n        to={Utils.resolvePageUrl(Config.pages.archive, prevPage)}\n        buttonStyle={style.buttonLeft}\n      >\n        <FaArrowLeft />\n        <span>Newer posts</span>\n      </Button>\n    ) : null}\n    {nextPage ? (\n      <Button\n        to={Utils.resolvePageUrl(Config.pages.archive, nextPage)}\n        buttonStyle={style.buttonRight}\n      >\n        <span>Older posts</span>\n        <FaArrowRight />\n      </Button>\n    ) : null}\n  </div>\n)\n\nArchivePagination.propTypes = {\n  prevPage: PropTypes.number,\n  nextPage: PropTypes.number,\n}\n\nexport default ArchivePagination\n","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n/* App imports */\nimport style from './tag-list.module.less'\nimport Config from '../../../config'\nimport Utils from '../../utils'\n\nconst TagList = ({ tags }) => (\n  <div className={style.tags}>\n    {tags\n      .filter((tag, index) => index === tags.indexOf(tag)) // Remove duplicate values\n      .sort()\n      .map(tag => {\n        const tagPageUrl = Utils.resolvePageUrl(Config.pages.tag, tag);\n        const tagData = Config.tags[tag]\n        if (!tagData) {\n          console.error(`Tag data for ${tag} not found`)\n        }\n\n        return (\n          <Link to={tagPageUrl} key={tag}>\n            {tagData?.name || Utils.capitalize(tag)} \n          </Link>\n      )})\n      }\n  </div>\n)\n\nTagList.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default TagList\n","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n/* App imports */\nimport style from './post-list.module.less'\nimport TagList from '../tag-list'\nimport Utils from '../../utils'\n\nconst PostList = ({ posts }) => (\n  <div className={style.container}>\n    {posts.map((post, index) => {\n      const { title, date, path, tags, cover, excerpt } = post.node.frontmatter\n      return (\n        <div key={title} className={style.post}>\n          <div className={style.cover}>\n            <Link to={Utils.resolvePageUrl(path)}>\n              <Img\n                fluid={cover.childImageSharp.fluid}\n                title={excerpt}\n                alt={title}\n              />\n            </Link>\n          </div>\n          <div className={style.content}>\n            <Link to={Utils.resolvePageUrl(path)}>\n              {date ? <label>{date}</label> : null}\n              <h2>{title}</h2>\n              <p>{excerpt}</p>\n            </Link>\n            <TagList tags={tags} />\n          </div>\n        </div>\n      )\n    })}\n  </div>\n)\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        frontmatter: PropTypes.shape({\n          title: PropTypes.string.isRequired,\n          date: PropTypes.string,\n          path: PropTypes.string.isRequired,\n          tags: PropTypes.arrayOf(PropTypes.string).isRequired,\n          cover: PropTypes.shape({\n            childImageSharp: PropTypes.shape({\n              fluid: PropTypes.object.isRequired,\n            }).isRequired,\n          }).isRequired,\n        }),\n      }),\n    })\n  ),\n}\n\nexport default PostList\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button-module--button--24AQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"archive-pagination-module--container--2VM7Y\",\"buttonLeft\":\"archive-pagination-module--buttonLeft--3CRS6\",\"buttonRight\":\"archive-pagination-module--buttonRight--Wnali\"};"],"sourceRoot":""}